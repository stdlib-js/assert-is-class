{"version":3,"file":"index.mjs","sources":["../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isFunction = require( '@stdlib/assert-is-function' );\n\n\n// VARIABLES //\n\nvar RE_CLASS = /^\\s*class\\s/;\n\n// Using `Function#toString` bypasses a value's own `toString` method to provide an extra, but not security proof, precaution to prevent a provided function from impersonating a class:\nvar fcn2str = Function.prototype.toString;\n\n\n// MAIN //\n\n/**\n* Tests if a value is a class.\n*\n* @param {*} value - value to test\n* @returns {boolean} boolean indicating whether value is a class\n*\n* @example\n* var bool = isClass( class Person {} );\n* // returns true\n*\n* @example\n* var bool = isClass( function Person() {} );\n* // returns false\n*\n* @example\n* var bool = isClass( null );\n* // returns false\n*/\nfunction isClass( value ) {\n\tvar str;\n\tif ( !isFunction( value ) ) {\n\t\treturn false;\n\t}\n\tstr = fcn2str.call( value );\n\treturn RE_CLASS.test( str );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isClass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Test if a value is a class.\n*\n* @module @stdlib/assert-is-class\n*\n* @example\n* var isClass = require( '@stdlib/assert-is-class' );\n*\n* var bool = isClass( class Person {} );\n* // returns true\n*\n* bool = isClass( function Person() {} );\n* // returns false\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],"names":["isFunction","require$$0","RE_CLASS","fcn2str","Function","prototype","toString","lib","value","str","call","test"],"mappings":";;sFAsBA,IAAIA,EAAaC,EAKbC,EAAW,cAGXC,EAAUC,SAASC,UAAUC,SAmCjC,ICvBAC,EDWA,SAAkBC,GACjB,IAAIC,EACJ,QAAMT,EAAYQ,KAGlBC,EAAMN,EAAQO,KAAMF,GACbN,EAASS,KAAMF"}